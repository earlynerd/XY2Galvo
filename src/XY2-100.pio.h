// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

//#define XY2_SM_CLOCK    8000000

// --------- //
// xy2_clock //
// --------- //

#define xy2_clock_wrap_target 0
#define xy2_clock_wrap 3

#define xy2_clock_offset_start 0u

static const uint16_t xy2_clock_program_instructions[] = {
            //     .wrap_target
    0xb342, //  0: nop                    side 9 [1] 
    0xf532, //  1: set    x, 18           side 10[1] 
    0xab42, //  2: nop                    side 5 [1] 
    0x0d42, //  3: jmp    x--, 2          side 6 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program xy2_clock_program = {
    .instructions = xy2_clock_program_instructions,
    .length = 4,
    .origin = -1,
};

static inline pio_sm_config xy2_clock_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + xy2_clock_wrap_target, offset + xy2_clock_wrap);
    sm_config_set_sideset(&c, 4, false, false);
    return c;
}
#endif

// --------- //
// xy2_laser //
// --------- //

#define xy2_laser_wrap_target 0
#define xy2_laser_wrap 6

#define xy2_laser_offset_start 0u

static const uint16_t xy2_laser_program_instructions[] = {
            //     .wrap_target
    0xa0e3, //  0: mov    osr, null                  
    0xa025, //  1: mov    x, status                  
    0x1024, //  2: jmp    !x, 4           side 0     
    0x1805, //  3: jmp    5               side 1     
    0x90a0, //  4: pull   block           side 0     
    0x6101, //  5: out    pins, 1                [1] 
    0x01e7, //  6: jmp    !osre, 7               [1] 
            //     .wrap
    0x0305, //  7: jmp    5                      [3] 
};

#if !PICO_NO_HARDWARE
static const struct pio_program xy2_laser_program = {
    .instructions = xy2_laser_program_instructions,
    .length = 8,
    .origin = -1,
};

static inline pio_sm_config xy2_laser_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + xy2_laser_wrap_target, offset + xy2_laser_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

// -------- //
// xy2_data //
// -------- //

#define xy2_data_wrap_target 0
#define xy2_data_wrap 19

#define xy2_data_offset_start 19u

static const uint16_t xy2_data_program_instructions[] = {
            //     .wrap_target
    0x1bc4, //  0: jmp    pin, 4          side 2 [3] 
    0x80a0, //  1: pull   block                      
    0xa027, //  2: mov    x, osr                     
    0x0105, //  3: jmp    5                      [1] 
    0xa3e1, //  4: mov    osr, x                 [3] 
    0x7570, //  5: out    null, 16        side 1 [1] 
    0x6041, //  6: out    y, 1                       
    0x0069, //  7: jmp    !y, 9                      
    0x1411, //  8: jmp    17              side 1     
    0x180e, //  9: jmp    14              side 2     
    0x6041, // 10: out    y, 1                       
    0x006d, // 11: jmp    !y, 13                     
    0x140e, // 12: jmp    14              side 1     
    0x1811, // 13: jmp    17              side 2     
    0x00e6, // 14: jmp    !osre, 6                   
    0xa142, // 15: nop                           [1] 
    0x1700, // 16: jmp    0               side 1 [3] 
    0x00ea, // 17: jmp    !osre, 10                  
    0xa142, // 18: nop                           [1] 
    0x1b00, // 19: jmp    0               side 2 [3] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program xy2_data_program = {
    .instructions = xy2_data_program_instructions,
    .length = 20,
    .origin = -1,
};

static inline pio_sm_config xy2_data_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + xy2_data_wrap_target, offset + xy2_data_wrap);
    sm_config_set_sideset(&c, 3, true, false);
    return c;
}
#endif
